(function() { var app = angular.module("number-input", []); app.directive("numberInput", function() { return { restrict: 'E', template: '<script>.number-input-container {height: 50px;}.number-input {width: calc(100% - 68px);border-top-right-radius: 0px;border-bottom-right-radius: 0px;box-shadow: none;}.number-input-btns-container {width: 68px;height: 34px;}.number-input-btns-container button {width: 34px;height: 34px;border-left: none;box-shadow: none;line-height: 5px;}.number-input-btns-container button:focus {outline: 0;background-color: white;border-color: #ccc;}.number-input-plus {border-radius: 0px;background: white;}.number-input-minus {border-top-left-radius: 0px;border-bottom-left-radius: 0px;background: white;}.number-input-hint {font-size: 0.8em;opacity: 0.5;}</script><div class="number-input-container"><input type="text" class="pull-left form-control number-input text-left" ng-model="model" ng-change="numberInput.onChange()" ng-keydown="numberInput.onKeyPress($event)"></input><div class="pull-right number-input-btns-container"><button type="button" class="btn btn-default pull-left number-input-plus" ng-click="numberInput.inc()"><strong>+</strong></button><button type="button" class="btn btn-default pull-right number-input-minus" ng-click="numberInput.dec()"><strong>-</strong></button></div><small ng-show="!hideHint" class="number-input-hint">{{numberInput.hint}}</small></div>', scope: { model: "=ngModel", start: "=?start", min: "=?min", max: "=?max", step: "=?step", hint: "@?hint", hideHint: "=?hideHint", disableDecimal: "=?disableDecimal", decimalPlaces: "=?decimalPlaces", options: "=?options" }, controller: ["$scope", function($scope) { var prevKey = null; var KEY_ZERO = 48; var KEY_NINE = 57; var KEY_PERIOD = 190; var KEY_DASH = 189; var KEY_SPACE = 32; this.inc = function() { if (isMaxed() || prevKey != null) return; $scope.model += $scope.step; validate(); }; this.dec = function() { if (isMinnd() || prevKey != null) return; $scope.model -= $scope.step; validate(); }; this.onKeyPress = function(e) { if (e.keyCode == KEY_SPACE) validate(); console.log("Code: " + e.keyCode); if (validKey(e.keyCode)) prevKey = e.keyCode; }; this.onChange = function() { console.log("Prev: " + prevKey); if (prevKey == KEY_PERIOD || prevKey == KEY_DASH || prevKey == KEY_ZERO) return; validate(); }; var getHint = function() { if ((!isMaxValid() && !isMinValid())) return $scope.hideHint = true; if ($scope.hint) return $scope.hint; if ($scope.options.hint) return $scope.options.hint; if (isMaxValid() && !isMinValid()) return "Less than or equal to " + $scope.max; if (isMinValid() && !isMaxValid()) return "Greater than or equal to " + $scope.min; if (isMaxValid() && isMinValid()) return $scope.min + " to " + $scope.max; }; var isMaxed = function() { return ($scope.max != null) && $scope.model >= $scope.max; }; var isMinnd = function() { return ($scope.min != null) && $scope.model <= $scope.min; }; var isMaxValid = function() { return ($scope.max != null); }; var isMinValid = function() { return ($scope.min != null); }; var validKey = function(key) { return (key >= KEY_ZERO && key <= KEY_NINE) || (key == KEY_DASH && ($scope.min == null || $scope.min < 0)) || (key == KEY_PERIOD && !$scope.disableDecimal && !($scope.decimalPlaces == 0)); }; var validate = function() { $scope.model = +parseFloat($scope.model).toFixed($scope.decimalPlaces); if (isMaxed()) $scope.model = $scope.max; if (isMinnd()) $scope.model = $scope.min; prevKey = null; }; var getDecimalPlaces = function() { var str = $scope.step.toString(); if (str.indexOf(".") >= 0) return str.split(".")[1].length; return 0; }; if (!$scope.options) $scope.options = {}; $scope.min = $scope.min || $scope.options.min; $scope.max = $scope.max || $scope.options.max; $scope.step = $scope.step || $scope.options.step || 1; $scope.hint = this.hint = getHint(); $scope.hideHint = $scope.hideHint || $scope.options.hideHint || false; $scope.disableDecimal = $scope.disableDecimal || $scope.options.disableDecimal || false; $scope.decimalPlaces = $scope.decimalPlaces || $scope.options.decimalPlaces || getDecimalPlaces(); $scope.start = $scope.start || $scope.options.start || $scope.min; $scope.model = $scope.start || $scope.model || 0; }], controllerAs: "numberInput" }; });})();